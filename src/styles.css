@import '@fontsource/fira-mono';

* {
	box-sizing: border-box;
}

:root {
	font-size: var(--font-size);
	font-family: var(--font-body);
	color: var(--color-text-light);
}

@media (min-width: 720px) {
	:root {
		font-size: calc(var(--font-size) + 6px);
	}
}

body {
	min-height: 100dvh;
	margin: 20px;
	background-color: var(--color-bg-dark);
	background-size: 100dvw 100dvh;
}

a {
	color: rgb(var(--color-text));
	text-decoration: none;
}

@media (hover: hover) {
	a:hover {
		text-decoration: underline;
	}
}

input,
button,
textarea,
select {
	font-size: inherit;
	font-family: inherit;
	display: inline-block;
	border: var(--color-accent-subtle) 1px solid;
	border-radius: var(--border-radius, 3px);
	padding: 0.5em 1em;
	margin: 0;
}

@supports not selector(:focus-visible) {
	input:focus {
		outline: var(--color-accent) solid 1px;
		outline: -webkit-focus-ring-color solid 1px;
	}
}

/* Buttons */
button {
	display: inline-flex;
	align-items: center;
	justify-content: center;
	border-radius: var(--border-radius, 6px);
	padding: 0 1rem;
	margin: auto 0.2rem;
	min-height: 50px;
	text-shadow: 0 1px 0 var(--color-bg-dark);
	border: 0 solid transparent;
	outline-color: var(--color-accent);
	outline-offset: -5px;
	outline-width: 2px;
	outline-style: none;
	color: inherit;

	touch-action: manipulation;
	user-select: none;
	-webkit-tap-highlight-color: transparent;
	cursor: pointer;

	&:active {
		transform: translate(1px, 1px);
	}
}

button:focus-visible {
	outline-style: dashed;
}

button:focus:not(:focus-visible) {
	outline: none;
}

button:has(.icon) {
	justify-content: space-between;

	&::after {
		content: '';
	}
}

button > .icon {
	display: inline-block;
	line-height: 0.5;
}

.btn-primary,
button.primary {
	background-color: hsl(from rgb(var(--color-primary)) h s l / 0.8);
	color: var(--color-accent-subtle);
	outline-color: var(--color-accent-subtle);

	@media (hover: hover) {
		&:hover {
			background-color: rgb(var(--color-primary));
		}
	}

	&:active {
		background-color: hsl(from rgb(var(--color-primary)) h s 40% / 1);
	}
}

.btn-secondary,
button.secondary {
	background-color: hsl(from rgb(var(--color-secondary)) h s l / 0.8);
	color: var(--color-accent-subtle);
	outline-color: var(--color-accent-subtle);

	@media (hover: hover) {
		&:hover {
			background-color: rgb(var(--color-secondary));
		}
	}

	&:active {
		background-color: hsl(from rgb(var(--color-secondary)) h s 40% / 1);
	}
}

.btn-neutral,
button.neutral {
	background-color: rgb(var(--color-neutral));
	color: var(--color-text);

	@media (hover: hover) {
		&:hover {
			background-color: hsl(from rgb(var(--color-neutral)) h s 100% / 1);
		}
	}

	&:active {
		background-color: hsl(from rgb(var(--color-neutral)) h s 100% / 1);
	}
}

button[disabled],
button.unavailable {
	background-color: light-dark(rgba(239, 239, 239, 0.3), rgba(19, 1, 1, 0.3));
	color: light-dark(rgba(16, 16, 16, 0.3), rgba(255, 255, 255, 0.3));
	border-color: light-dark(rgba(118, 118, 118, 0.3), rgba(195, 195, 195, 0.3));
	outline-color: var(--color-accent);
	text-shadow: 0 1px 0 hsl(from var(--color-bg-light) h s l / 0.3);
	@media (hover: hover) {
		&:hover {
			background-color: light-dark(rgba(239, 239, 239, 0.3), rgba(19, 1, 1, 0.3));
		}
	}
}

button[disabled] {
	cursor: default;
}

@media (hover: hover) {
	button.unavailable:hover {
		background-color: rgba(249, 249, 249, 0.5);
	}
}

.btn-link,
button.link {
	appearance: unset;
	background-color: transparent;
	border: none;
	color: rgb(var(--color-primary));
	text-shadow: 0 0 transparent;
	padding: 0;
	min-height: 40px;
	line-height: 1.2;
}

button[data-loading='true'] {
	pointer-events: none;
	animation: fadeInAndOut 1s infinite alternate ease-in-out;
}

.button-group {
	display: flex;
	gap: 1px;
}

.button-group > button {
	flex: 1;
	margin: 0;
}

.button-group button:not(:last-child):not(:first-child) {
	border-radius: 0;
	border-left: 0;
	border-right: 0;
}

.button-group button:last-child {
	border-radius: 0 var(--border-radius, 6px) var(--border-radius, 6px) 0;
}

.button-group button:first-child {
	border-radius: var(--border-radius, 6px) 0 0 var(--border-radius, 6px);
}
